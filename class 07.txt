UDP 기반 소켓 프로그래밍
TCP가 SEQ, ACK 관련 메시지를 전달하지만(Error Control), UDP는 이 것이 없다
++ Flow Control도 없다. ( Buffer 상황에 따른 전송 결정이 없다 )

또한 TCP가 소켓의 1:1 연결을 요구하지만, UDP는 연결 개념이 따로 없음
송수신이 관계없이 가능하며, 둘 이상 영역에 데이터 송수신이 가능
( ++ TCP 소켓과 UDP 소켓이 동일 port를 활용 시 자동으로 구분됨 )


TPC가 read write가 가능한 것은 1:1 이기에 가능한 것
UDP는 유사하게 전송하지만, 뒤에 대상 소켓 주소를 추가 입력해줘야 한다. (다대 통신임으로)

UDP 수신의 경우, sockaddr 형으로 별도의 보낸 소켓의 주소를 따로 저장해둠


UDP는 데이터 경계가 존재하지 않기 때문에,
한번의 recvfrom은 하나의 완전한 메시지를 읽어들임

sendto를 통해 전송시 IP, port 정보는 자동으로 보내짐
( TCP의 경우는 connect시에 할당됨 ) 


여기서 TCP와 차이가 큰데
사용함수가 다르며, 전달 목적치(주소)를 호출 시 마다 전송한다는 점


connected UDP 소켓
같은 대상에게 자주 전송해야 할 경우, 소켓에 connect를 통해 타겟 주소를 할당하여
UDP를 통한 반복 전송이 용이해짐 ( 직접 연결은 아님, 그냥 주소 할당 )
connected 한 뒤에는 sendto가 아닌 read, write 활용 ( 주소 입력이 필요없음으로 )







