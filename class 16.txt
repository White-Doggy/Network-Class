멀티 프로세스 기반 서버 단점
각각의 프로세스는 개별 프로세스로써 메모리를 각각 가짐으로 메모리 낭비가 크다
( 쓰레드가 훨씬 메모리 소모가 적음 )


IO 멀티 플렉싱 
멀티 프로세스 서버의 대안책, 하나의 프로세스가 여러 소켓을 핸들링하는 방법



select 함수
fd_set 형 변수에 특정 디스크립터의 정보를 묶음
이러한 fd_set 열이 read, wirte, except를 할당할 수 있지만 readset에 중점

비트 배열을 위 fd_set에 할당하는데 특정 파일디스크립터 순서의 비트를 1로 지정해 
해당 파일 디스크립터를 살피게 됨

fd_max 라는 변수도 있는데, select를 통해 확인할 파일 디스크립터 범위를 지정하게됨
파일디스크립터는 0번 부터 임으로 마지막 대상+1 값을 가져야 함

이때 변수들은 fd_set의 주소를 넘기게 되는데, 읽은 뒤 존재하거나 출력 가능한 소켓의 디스크립터만
1로 바꾸고 나머지는 0으로 초기화 해줌

즉 select 호출 시 정상 디스크립터를 확인할 수 있게됨

* 주의 *
확인할 대상들을 선택한 fd_set의 결과가 해당 변수에 적용 되기 때문에,
반복해서 select를 해야할 경우, 해당 fd_set을 다시 초기화 시켜줘야 한다


이렇게 select를 통해 읽을 내용이 있는 파일 디스크립터를 확인하고
해당 파일 디스크립터에 연결된 소켓이 어떤 소켓인가에 따라 다른 작업을 처리함으로써 
반복문을 통해 하나의 프로세스내에서 처리가 가능함